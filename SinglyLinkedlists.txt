#include <iostream>
#include <bits/stdc++.h>
#include <iterator>

using namespace std;

struct Node
{
    int value;
    Node *next;
};

class SLL
{
private:
    int length;
    Node *front;
    Node *back;

public:
    SLL()
    {
        length = 0;
        front = NULL;
        back = NULL;
    }

    void append(int value)
    {
        Node *temp = new Node();
        temp -> value = value;
        if(length == 0)
        {
            front = temp;
            back = temp;
        }
        else
        {
            back -> next = temp;
            back = temp;
        }

        length++;
    }

    void appendFront(int value)
    {
        Node *temp = new Node();
        temp -> value = value;
        if(length == 0)
        {
            front = temp;
            back = temp;
        }
        else
        {
            temp -> next = front;
            front = temp;
        }
        length ++;
    }

    void insert(int value, int p)
    {
        Node *temp = front;
        if(p == 1){ appendFront(value); return;}
        if(p == length + 1){append(value); return;}

        for(int i = 1; i < p; i++)
        {
            temp = temp -> next;
        }
        Node *temp2 = new Node();
        temp2 -> value = value;
        Node *temp3 = temp -> next;
        temp -> next = temp2;
        temp2 -> next = temp3;

        length++;
    }

    void display()
    {
        Node *curr = front;
        while(curr != NULL)
        {
            cout<<curr -> value<<" ";
            curr = curr -> next;
        }
        cout<<endl;
    }

    int size()
    {
        return length;
    }

    void reverse()
    {
        this -> back = front;
        Node *prev = NULL;
        Node *curr = front;
        Node *back = NULL;
        while(curr != NULL)
        {
            back = curr -> next;
            curr -> next = prev;
            prev = curr;
            curr = back;
        }
        this -> front = prev;
    }

    void del(int p)
    {
        Node *temp = front;
        if(p == 1){ front = front -> next; return;}
        for(int i = 1; i < p - 1; i++)
        {
            temp = temp -> next;
        }
        Node *temp2 = temp -> next;
        temp -> next = temp2 -> next;
        delete temp2;

        length--;
    }

    void delByVal(int value)
    {
        if(front -> value == value){ front = front -> next; return;}

        Node *curr = front -> next;
        Node *prev = front;
        while(curr != NULL)
        {
            if(curr -> value == value)
            {
                prev -> next = curr -> next;
                delete curr;
                break;
            }
            prev = curr;
            curr = curr -> next;
        }

        length--;
    }
};

int main()
{
    SLL sll;
    sll.append(1);
    sll.display();  cout<<"-->"<<sll.size()<<endl;
    sll.append(89);
    sll.display();  cout<<"-->"<<sll.size()<<endl;
    sll.insert(1,0);
    sll.display();  cout<<"-->"<<sll.size()<<endl;
    sll.appendFront(-1);
    sll.display();  cout<<"-->"<<sll.size()<<endl;
    sll.reverse();
    sll.display();  cout<<"-->"<<sll.size()<<endl;
    sll.del(4);
    sll.display();  cout<<"-->"<<sll.size()<<endl;
    sll.delByVal(1);
    sll.display();  cout<<"-->"<<sll.size()<<endl;

    return 0;
}

